var PlayerReptiloid = '';
var slug            = '';
$(document).ready(function(){

	slug = $("#slug").val();
	playerInit();

	sliderInitialization();
});

function playerInit(){

    // var slug = $("#slug").val();

    console.log( slug );

	var options = populateWithOptions();
	var yt_int, yt_players = {}, PlayerReptiloid,
	    initYT = function() {

	    	// console.log('pidarastia');
	    	 

			PlayerReptiloid = new YT.Player('hiddenPlayer', options);
	    	console.log( PlayerReptiloid );

			

	        
	    };
   
 //   	$.getScript("//www.youtube.com/player_api", function() {
	//     yt_int = setInterval(function(){
	//         if(typeof YT === "object"){
	//             initYT();
	//             clearInterval(yt_int);
	//         }
	//     }, 500);
	// });

	// $('#pidorlive').on('click', function(){


	// 	// console.log( PlayerReptiloid );
	// 	PlayerReptiloid.playVideo(); 

	// 	var slug = $("#slug").val();

	// 	PlayerReptiloid.loadVideoById({
 //              videoId: slug,
 //              startSeconds: 160,
 //              endSeconds: 167
 //            });		

	// 	return false;

	// });


}

function sliderInitialization(){

	if( !$('.sliders_step1').length ){ return false; }

	//@todo try to calculate step using duration for reducing elements
	//@todo we can remove duration things from urls, parameters
  	var data = $('.sliders_step1').data();
    console.log(data);

	var min    = data.min;
	var max    = data.max;

	var step   = data.step;

	var start  = data.start;
	var end    = data.end;

	var values = [start, end];

	$("#slider-range").slider({
  
      range : true,
      min   : min,
      max   : max,
      step  : step,
      values: values,

      slide: function (e, ui) {
        

        // PlayerReptiloid.pauseVideo();

        var first_elem_html = calculationDisplanation( ui.values[0], step );
        $('.slider-time').html( first_elem_html );

        $('#inputStart').val( ui.values[0] );

        // console.log( $('#inputTime1').val() );
        $('.total').html( calculationDisplanation( max, step ) );        

        var total = durationCalculation( ui.values );
        // console.log(total);

        $('.sliders_step1').data("total", total);
        // console.log( $('.sliders_step1').data() );

        $('#inputEnd').val( ui.values[1] );
        var second_elem_html = calculationDisplanation( ui.values[1], step );
        $('.slider-time2').html( second_elem_html );



        // $('#inputTime2').val( '' );
        // console.log( $('#inputTime2').val() );

      }
  });

}


function calculationDisplanation( value, step ){
  
  // console.log( value + ' seconds ' );

  if( step == 1 ){

    var minutesA = Math.floor( value / 60);
    var secondsA = value - (minutesA * 60);
    var html = '';      
       // console.log( minutesA );
       // console.log( secondsA );

   if( minutesA ){
        html += minutesA + ":" ; 
   } else {
        html += '00:';
   }

   if( secondsA ){
       secondsA = addZeroBeforeTime(secondsA);
       // if( secondsA < 10 ){ secondsA = "0" + secondsA; }
        html += secondsA;
   } else {
        html += '00';
   }

    
       // console.log( html );
       return html;


  }
  
  if( step == 60 ){
    
    var minutesA = Math.floor( value / 60);
    var secondsA = value - (minutesA * 60);
    var html = '';      

   // console.log( minutesA );
   // console.log( secondsA );

   if( minutesA ){
    minutesA = addZeroBeforeTime(minutesA);
     // if( minutesA < 10 ){ minutesA = "0" + minutesA; }
        html += minutesA + ":" ; 
   } else {
        html += '00:';
   }

   if( secondsA ){
    // secondsA = addZeroBeforeTime(secondsA);
       
        html += secondsA;
   } else {
        html += '00';
   }
     // console.log( html );
    return html;  

  }
  
  if( step == 300 ){
    
       var hoursA   = Math.floor( value / 3600);
       var minutesA = (value/60) - (hoursA * 60);
       var html = '';  

       if( hoursA ){
            html += hoursA + ":";
       }        

       if( minutesA ){
            minutesA = addZeroBeforeTime(minutesA);

            html += minutesA + ":00" ; 
       } else {
            html += '00:00';
       }

       // if( secondsA ){
       //      html += secondsA;
       // } else {
       //      html += '00';
       // }

       // console.log( html );
       return html;

  }
  
  return html;
  
}

function durationCalculation( values ){

    var totalSeconds = values[1] - values[0];

    // console.log(totalSeconds);

    var durationMinutes = Math.floor(totalSeconds / 60);

    // console.log(durationMinutes);    
    durationSeconds = totalSeconds - (durationMinutes * 60);
    durationSeconds = addZeroBeforeTime(durationSeconds);
    
    // console.log(durationSeconds);    
    
    $('.duration').html( durationMinutes + ':' + durationSeconds +  ' sec' );

    return totalSeconds;

}

function addZeroBeforeTime( value ){
    if( value < 10) {
        value = '0' + value;
    }
    return value;
}

// *** Player's related functions

function populateWithOptions(){

	// var slug = $("#slug").val();
	console.log(slug);

	var options = {

		height: '390',
		width : '640',

		videoId: slug,
		playerVars: {
			rel: 0,
			enablejsapi: 1
		}, //remove relative videos after stop function and add ability to kick ass

		events: {
	        // 'onReady': onReadyEvent,
			// 'onStateChange': onPlayerStateChange,
		    // 'onApiChange': onApiChangeEvent,
		}
		


	};

	console.log(options);

	return options;
}

function onReadyEvent(event){

	
	callVideoReload(event);

	
	// console.log( event.target.getDuration() );
	
	console.log( $('#padaboom').prop('href') );

	// var href = $('#padaboom').prop('href', $('#padaboom').prop('href') + event.target.getDuration() );
	// YouTubeloadvideo(player, 60, 67);
	// player.play();





}

function onApiChangeEvent (event){


	if (event.data === YT.PlayerState.ENDED) {


		//load same video and set start & end points



		// var start  = $('');
		// var end    = $('');
		// var player = event.target;
		// YouTubeloadvideo(player, start, end);
		// callVideoReload(event)

          // console.log(index);
        //   if (index < videos.length - 1) {

        	// run same video from start 

            // event.target.loadVideoById({
            //   videoId: videos[index].vid,
            //   startSeconds: videos[index].startSeconds,
            //   endSeconds: videos[index].endSeconds
            // });
        //     index++;
        // }

    }


    // when user pause video via controls
    // when we call pause via js

    if (event.data === YT.PlayerState.PAUSED) {

    	console.log('pause');
    	console.log($('').val());

    	var flag = $('').val();
    	if( flag ){
    		console.log('paused outside');

    	// var start  = $('');
		// var end    = $('');
		// var player = event.target;
		// YouTubeloadvideo(player, start, end);
		// callVideoReload(event)

    	} else {
    		console.log('paused by controls');
    	}




    }

}

function onPlayerStateChange (event){


	if (event.data === YT.PlayerState.ENDED) {


		//load same video and set start & end points

		callVideoReload(event);

    }


    // when user pause video via controls
    // when we call pause via js

    // maybe we don't need to manipulate this event anymore
    if (event.data === YT.PlayerState.PAUSED) {

  //   	console.log('pause');
  //   	console.log($('').val());

  //   	var flag = $('').val();
  //   	if( flag ){
  //   		console.log('paused outside');

  //   	// var start  = $('');
		// // var end    = $('');
		// // var player = event.target;
		// // YouTubeloadvideo(player, start, end);
		// // callVideoReload(event)

  //   	} else {
  //   		console.log('paused by controls');
  //   	}




    }

}

function YouTubeloadvideo(player, start, end) { 

	// console.log(player);
	// console.log(start);
	// console.log(end);

	player.loadVideoById({

		videoId         : slug,
        startSeconds    : 60,
        endSeconds      : 67,
        suggestedQuality: 'medium'
    });

    console.log('badaboom');

}

function callVideoReload(event){

    var data = $('.sliders_step1').data();

    if( !data ){ return false; }

	//TimeInSeconds
    start = data.start;

    //TimeInSeconds
    end   = data.end;

    // var slug = $("#slug").val();
    console.log( slug );

	var player = event.target;
    // console.log(startTimeInSeconds);
    // console.log(endTimeInSeconds);
    // console.log(data);
    // console.log(data);

	YouTubeloadvideo(player, start, end);

	// }



}

function callVideoReloadSlider(){

	var data = $('.sliders_step1').data();

    if( !data ){ return false; }

	//TimeInSeconds
    start = data.start;

    //TimeInSeconds
    end   = data.end;

    // var slug = $("#slug").val();
    console.log( slug );

	// var player = event.target;
    // console.log(startTimeInSeconds);
    // console.log(endTimeInSeconds);
    // console.log(data);
    // console.log(data);

	YouTubeloadvideo(PlayerReptiloid, start, end);
}

// The API calls this function when the player's state changes.
function onPlayerStateChange(event) {
  switch (event.data) {
    case YT.PlayerState.UNSTARTED:
      console.log('unstarted');
      break;
    case YT.PlayerState.ENDED:
      console.log('ended');
      break;
    case YT.PlayerState.PLAYING:
      console.log('playing');
      break;
    case YT.PlayerState.PAUSED:
      console.log('paused');
      break;
    case YT.PlayerState.BUFFERING:
      console.log('buffering');
      break;
    case YT.PlayerState.CUED:
      console.log('video cued');
      break;
  }
}